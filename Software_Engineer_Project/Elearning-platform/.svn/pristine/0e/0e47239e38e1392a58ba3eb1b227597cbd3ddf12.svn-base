/**
 * 
 */
package da.kang.learning_platform.web.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang.StringUtils;
import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionSupport;

import da.kang.learning_platform.AppConstant;
import da.kang.learning_platform.orm.Page;
import da.kang.learning_platform.orm.PropertyFilter;
import da.kang.learning_platform.pojo.LearningGroup;
import da.kang.learning_platform.service.LearningGroupManager;

/**
 * @author zdk
 * 
 */
public class LearningGroupAction extends ActionSupport {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1367481665666201769L;

	private LearningGroup learningGroup;

	private LearningGroupManager learningGroupManager;

	private Page<LearningGroup> page = new Page<LearningGroup>(
			AppConstant.DEFAULT_PAGE_SIZE);

	public String list() throws Exception {
		HttpServletRequest request = ServletActionContext.getRequest();
		List<PropertyFilter> filters = PropertyFilter
				.buildFromHttpRequest(request);
		if (!page.isOrderBySetted()) {// 设置默认排序方式
			page.setOrderBy("name");
			page.setOrder(Page.ASC);
		}
		page = learningGroupManager.searchLearningGroup(page, filters);
		return SUCCESS;
	}

	public String input() throws Exception {
		// 名字不能为空
		if (StringUtils.isEmpty(learningGroup.getName())) {
			return ERROR;
		}
		learningGroupManager.save(learningGroup);
		return list();
	}

	public LearningGroupManager getLearningGroupManager() {
		return learningGroupManager;
	}

	public void setLearningGroupManager(
			LearningGroupManager learningGroupManager) {
		this.learningGroupManager = learningGroupManager;
	}

	public Page<LearningGroup> getPage() {
		return page;
	}

	public void setPage(Page<LearningGroup> page) {
		this.page = page;
	}

	public LearningGroup getLearningGroup() {
		return learningGroup;
	}

	public void setLearningGroup(LearningGroup learningGroup) {
		this.learningGroup = learningGroup;
	}

}
