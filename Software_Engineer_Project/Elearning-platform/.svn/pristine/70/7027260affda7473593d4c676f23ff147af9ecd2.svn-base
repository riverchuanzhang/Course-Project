/**
 * 
 */
package da.kang.learning_platform.web.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.ServletActionContext;
import org.springframework.util.Assert;

import com.opensymphony.xwork2.ActionSupport;

import da.kang.learning_platform.AppConstant;
import da.kang.learning_platform.orm.Page;
import da.kang.learning_platform.orm.PropertyFilter;
import da.kang.learning_platform.pojo.LearningGroup;
import da.kang.learning_platform.pojo.Paper;
import da.kang.learning_platform.pojo.Topic;
import da.kang.learning_platform.service.PaperManager;
import da.kang.learning_platform.service.TopicManager;

/**
 * @author zdk
 * 
 */
public class TopicAction extends ActionSupport {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3897760013752614985L;

	private Page<Topic> page = new Page<Topic>(AppConstant.DEFAULT_PAGE_SIZE);
	private Paper paper;
	private Topic topic;
	private LearningGroup learningGroup;
	private TopicManager topicManager;
	private PaperManager paperManager;

	/**
	 * 对于某个问题,进行答案查询分页
	 * 
	 * @return
	 * @throws Exception
	 */
	public String listForPaper() throws Exception {
		Assert.notNull(paper);
		HttpServletRequest request = ServletActionContext.getRequest();
		List<PropertyFilter> filters = PropertyFilter
				.buildFromHttpRequest(request);
		if (!page.isOrderBySetted()) {// 设置默认排序方式
			page.setOrderBy("type");
			page.setOrder(Page.ASC);
		}
		paper = paperManager.get(paper.getId());// 答案对应的问题

		learningGroup = paper.getLearningGroup();

		page = topicManager.findPage(page, filters, paper.getId());
		return "lgroup-paper_topic";
	}

	/**
	 * 保存或修改
	 * 
	 * @return
	 * @throws Exception
	 */
	public String input() throws Exception {
		paper = topic.getPaper();
		Assert.notNull(paper);
		topicManager.save(topic);
		return listForPaper();
	}

	/**
	 * 编辑试卷
	 * 
	 * @return
	 * @throws Exception
	 */
	public String editForPaper() throws Exception {
		paper = paperManager.get(paper.getId());// 答案对应的问题
		Assert.notNull(paper);
		learningGroup = paper.getLearningGroup();	
		return "lgroup-paper_topic_edit";
	}

	public Page<Topic> getPage() {
		return page;
	}

	public void setPage(Page<Topic> page) {
		this.page = page;
	}

	public Paper getPaper() {
		return paper;
	}

	public void setPaper(Paper paper) {
		this.paper = paper;
	}

	public Topic getTopic() {
		return topic;
	}

	public void setTopic(Topic topic) {
		this.topic = topic;
	}

	public LearningGroup getLearningGroup() {
		return learningGroup;
	}

	public void setLearningGroup(LearningGroup learningGroup) {
		this.learningGroup = learningGroup;
	}

	public TopicManager getTopicManager() {
		return topicManager;
	}

	public void setTopicManager(TopicManager topicManager) {
		this.topicManager = topicManager;
	}

	public PaperManager getPaperManager() {
		return paperManager;
	}

	public void setPaperManager(PaperManager paperManager) {
		this.paperManager = paperManager;
	}

}
